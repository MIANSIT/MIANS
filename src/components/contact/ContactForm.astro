<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="grid gap-12 lg:grid-cols-2 lg:gap-8">
      <div class="flex flex-col gap-4 sm:gap-6">
        <h2 class="text-3xl font-medium tracking-tight sm:text-4xl">Letâ€™s take our first leap</h2>
        <p class="max-w-lg text-lg sm:text-xl">
          together to turn your ideas into a reality.
        </p>
        <div class="pl-20 pt-8 hidden md:block">
          <span class="sr-only">MIANS</span>
          <img
            width="200"
            height="80"
            :src="$store.theme.isDark ? '/MIANS/assets/icon3.png' : '/MIANS/assets/icon2.png'"
            alt="MIANS"
          />
        </div>
      </div>

      <!-- Form -->
      <form id="contactForm" class="mt-3 flex flex-col gap-y-6">
        <!-- Access Token -->
        <input type="hidden" name="access_key" value="e5ef5fb1-540f-4ad0-b3e9-4c5a706b2a02" />

        <!-- Full name input -->
        <div>
          <label for="full-name" class="sr-only">Full name</label>
          <input
            type="text"
            name="full-name"
            id="full-name"
            autocomplete="name"
            class="block w-full appearance-none rounded-md border-0 bg-primary-50 px-4 py-4 text-base ring-1 ring-primary-900/40 transition placeholder:text-primary-950/60 hover:ring-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:bg-primary-950 dark:ring-primary-200/40 dark:placeholder:text-primary-200/60 dark:hover:ring-primary-400 dark:focus:ring-primary-400"
            placeholder="Full name"
            required
          />
        </div>

        <!-- Email input -->
        <div>
          <label for="email" class="sr-only">Email</label>
          <input
            type="email"
            name="email"
            id="email"
            autocomplete="email"
            class="block w-full appearance-none rounded-md border-0 bg-primary-50 px-4 py-4 text-base ring-1 ring-primary-900/40 transition placeholder:text-primary-950/60 hover:ring-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:bg-primary-950 dark:ring-primary-200/40 dark:placeholder:text-primary-200/60 dark:hover:ring-primary-400 dark:focus:ring-primary-400"
            placeholder="Email"
            required
            pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
          />
        </div>
        <div>
          <label for="phone" class="sr-only">Phone Number</label>
          <input
            type="tel"
            name="phone"
            id="phone"
            autocomplete="tel"
            class="block w-full appearance-none rounded-md border-0 bg-primary-50 px-4 py-4 text-base ring-1 ring-primary-900/40 transition placeholder:text-primary-950/60 hover:ring-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:bg-primary-950 dark:ring-primary-200/40 dark:placeholder:text-primary-200/60 dark:hover:ring-primary-400 dark:focus:ring-primary-400"
            placeholder="Phone Number"
            required
            pattern="^\+?\d{10,15}$"
          />
        </div>

        <!-- Message textarea -->
        <div>
          <label for="message" class="sr-only">Message</label>
          <textarea
            name="message"
            id="message"
            rows="3"
            class="block w-full appearance-none rounded-md border-0 bg-primary-50 px-4 py-4 text-base ring-1 ring-primary-900/40 transition placeholder:text-primary-950/60 hover:ring-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:bg-primary-950 dark:ring-primary-200/40 dark:placeholder:text-primary-200/60 dark:hover:ring-primary-400 dark:focus:ring-primary-400"
            placeholder="Message"
            required></textarea>
        </div>

        <div>
          <button
            class="rounded-lg border border-transparent bg-primary-600 px-5 py-3 text-base font-medium text-white transition hover:bg-primary-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600 dark:bg-primary-400 dark:text-primary-950 dark:hover:bg-primary-300 dark:hover:text-primary-50 dark:focus-visible:outline-primary-400"
            type="submit"
          >
            Submit
          </button>
        </div>
      </form>

      <!-- Popup Message -->
      <div
        id="successPopup"
        class="bg-black/50 fixed inset-0 flex hidden items-center justify-center"
      >
        <div
          class="relative mx-auto max-w-sm rounded-lg bg-primary-600 p-6 text-primary-100 dark:bg-primary-100 dark:text-primary-600"
        >
          <button id="closePopup" class="text-gray-500 hover:text-gray-700 absolute right-2 top-2"
            >&times;</button
          >
          <h3 class="text-xl font-medium">Form submitted successfully!</h3>
          <p class="mt-2">
            Thank you! The form has been submitted successfully. We will reply to you soon!
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const form = document.getElementById('contactForm') as HTMLFormElement | null;
  const email = document.getElementById('email') as HTMLInputElement | null;
  const phone = document.getElementById('phone') as HTMLInputElement | null;
  const closePopupButton = document.getElementById('closePopup');
  const successPopup = document.getElementById('successPopup');
  const submitButton = form?.querySelector("button[type='submit']") as HTMLButtonElement | null;

  if (form && email && phone && closePopupButton && successPopup && submitButton) {
    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    const phonePattern = /^\+?\d{10,15}$/;

    form.addEventListener('submit', async function (event) {
      event.preventDefault();

      if (!emailPattern.test(email.value)) {
        alert('Please enter a valid email address.');
        email.focus();
        return;
      }

      if (!phonePattern.test(phone.value)) {
        alert('Please enter a valid phone number.');
        phone.focus();
        return;
      }

      const formData = new FormData(form); // TypeScript now recognizes 'form' as HTMLFormElement

      try {
        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          body: formData,
        });

        if (response.ok) {
          successPopup.classList.remove('hidden');
          successPopup.classList.add('flex');
          submitButton.disabled = true; // Explicitly typed as HTMLButtonElement, so no error here
          form.reset();
        } else {
          console.error('Error submitting form:', response.statusText);
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });

    closePopupButton.addEventListener('click', function () {
      successPopup.classList.add('hidden');
      successPopup.classList.remove('flex');
      submitButton.disabled = false;
    });
  }
</script>
